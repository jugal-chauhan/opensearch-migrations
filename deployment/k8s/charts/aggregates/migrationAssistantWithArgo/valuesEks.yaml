conditionalPackageInstalls:
  localstack: true
  jaeger: false

aws:
  configureAwsEksResources: true
  region: ""
  account: ""

defaultBucketConfiguration:
  useLocalStack: true
  deleteOnUninstall: true
  emptyBeforeDelete: true
  endpoint: localstack

# Useful for updating images while developing
#images:
#  captureProxy:
#    pullPolicy: Always
#  trafficReplayer:
#    pullPolicy: Always
#  reindexFromSnapshot:
#    pullPolicy: Always
#  migrationConsole:
#    pullPolicy: Always
#  installer:
#    pullPolicy: Always

# For OTEL Daemonset
otelConfiguration:
  image:
    repository: otel/opentelemetry-collector-contrib
    tag: 0.104.0
  collectorConfig: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
      kubeletstats:
        collection_interval: 60s
        auth_type: serviceAccount
        insecure_skip_verify: true
        metric_groups: [container, pod]
        # NOTE: metrics: {} removed to use defaults (this avoids invalid keys)
    processors:
      batch:
        timeout: 10s
        send_batch_size: 8192
        send_batch_max_size: 10000
      cumulativetodelta: {}
      k8sattributes:
        auth_type: serviceAccount
        passthrough: false
        extract:
          metadata:
            - k8s.pod.name
            - k8s.namespace.name
            - k8s.container.name
            - k8s.node.name
          labels:
            - key: app
            - key: qualifier    # qtest
      resource/metrics:
        attributes:
          - key: qualifier
            value: ${env:QUALIFIER}
            action: insert
      resource/remove_default_attributes:
        attributes:
          - key: telemetry.sdk.name
            action: delete
          - key: telemetry.sdk.version
            action: delete
          - key: telemetry.sdk.language
            action: delete
          - key: service.name
            action: delete
    extensions:
      health_check:
        endpoint: :13133
    exporters:
      awsemf:
        namespace: 'OpenSearchMigrations'
        dimension_rollup_option: NoDimensionRollup # Reduce number of metrics by only publishing with all dimensions
        resource_to_telemetry_conversion:
          enabled: true
      prometheus:
        endpoint: "0.0.0.0:8889"
        send_timestamps: true
        metric_expiration: 5m
        enable_open_metrics: true
    service:
      extensions: [health_check]
      pipelines:
        metrics:
          receivers: [otlp]
          processors:
            - resource/remove_default_attributes
            - resource/metrics
            - cumulativetodelta
            - batch
          exporters: [awsemf, prometheus]
        metrics/pods:
          receivers: [kubeletstats]
          processors:
            - resource/remove_default_attributes
            - k8sattributes
            - resource/metrics
            - batch
          exporters: [awsemf, prometheus]

charts:
  fluent-bit:
    values:
      env:
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: aws-metadata
              key: AWS_REGION
        - name: STAGE_NAME
          valueFrom:
            configMapKeyRef:
              name: aws-metadata
              key: STAGE_NAME

      config:
        # Change output destination to be CloudWatch
        outputs: |
          [OUTPUT]
              Name                cloudwatch_logs
              Match               fluentbit-*
              region              ${AWS_REGION}
              log_group_name      /migration-assistant-${STAGE_NAME}-${AWS_REGION}/logs
              log_stream_prefix   from-
              auto_create_group   true

      # Remove logs PVC mount for EKS deployment
      extraVolumes:
        - name: lua-scripts
          configMap:
            name: fluentbit-lua-scripts

      extraVolumeMounts:
        - name: lua-scripts
          mountPath: /fluentbit/scripts
          readOnly: true