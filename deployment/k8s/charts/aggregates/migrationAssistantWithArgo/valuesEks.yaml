conditionalPackageInstalls:
  localstack: false
  jaeger: false

aws:
  configureAwsEksResources: true
  region: ""
  account: ""

defaultBucketConfiguration:
  useLocalStack: false
  deleteOnUninstall: true
  emptyBeforeDelete: true
  endpoint: ""

# Useful for updating images while developing
#images:
#  captureProxy:
#    pullPolicy: Always
#  trafficReplayer:
#    pullPolicy: Always
#  reindexFromSnapshot:
#    pullPolicy: Always
#  migrationConsole:
#    pullPolicy: Always
#  installer:
#    pullPolicy: Always

# For OTEL Daemonset
otelConfiguration:
  serviceAccountName: "migrations-service-account"
  env:
    - name: KUBE_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
  collectorConfig: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
      prometheus:
        config:
          global:
            scrape_interval: 30s
          scrape_configs:
            - job_name: kubelet-cadvisor-proxy
              kubernetes_sd_configs:
                - role: node
              scheme: https
              bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
              tls_config:
                insecure_skip_verify: true
              relabel_configs:
                - action: replace
                  target_label: __address__
                  replacement: kubernetes.default.svc:443
                - action: replace
                  source_labels: [__meta_kubernetes_node_name]
                  target_label: __metrics_path__
                  replacement: /api/v1/nodes/$${1}/proxy/metrics/cadvisor
              metric_relabel_configs:
                - source_labels: [container]
                  regex: '^$|^POD$'
                  action: drop
            - job_name: kubelet-metrics-proxy
              kubernetes_sd_configs:
                - role: node
              scheme: https
              bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
              tls_config:
                insecure_skip_verify: true
              relabel_configs:
                - action: replace
                  target_label: __address__
                  replacement: kubernetes.default.svc:443
                - action: replace
                  source_labels: [__meta_kubernetes_node_name]
                  target_label: __metrics_path__
                  replacement: /api/v1/nodes/$${1}/proxy/metrics
              metric_relabel_configs:
                - source_labels: [container]
                  regex: '^$|^POD$'
                  action: drop
            - job_name: 'kube-state-metrics'
              kubernetes_sd_configs:
                - role: endpoints
                  namespaces:
                    names: ["ma"]
              relabel_configs:
                - source_labels: [__meta_kubernetes_service_name]
                  action: keep
                  regex: kube-prometheus-stack-kube-state-metrics
    processors:
      batch:
        timeout: 10s
        send_batch_size: 8192
        send_batch_max_size: 10000
      k8sattributes:
        auth_type: "serviceAccount"
        passthrough: false
        filter:
          node_from_env_var: KUBE_NODE_NAME
        extract:
          metadata:
            - k8s.namespace.name
            - k8s.pod.name
            - k8s.container.name
            - k8s.node.name
        pod_association:
          - sources:
              - from: resource_attribute
                name: k8s.pod.ip
          - sources:
              - from: resource_attribute
                name: k8s.pod.uid
          - sources:
              - from: connection
      attributes:
        actions:
          - key: namespace
            from_attribute: k8s.namespace.name
            action: upsert
          - key: pod
            from_attribute: k8s.pod.name
            action: upsert
          - key: container
            from_attribute: k8s.container.name
            action: upsert
          - key: node
            from_attribute: k8s.node.name
            action: upsert
      cumulativetodelta:
      resource/metrics:
        attributes:
          - key: qualifier
            value: ${env:QUALIFIER}
            action: upsert
          - key: service.name
            value: "kubernetes-infrastructure"
            action: upsert
      resource/remove_default_attributes:
        attributes:
          - key: telemetry.sdk.name
            action: delete
          - key: telemetry.sdk.version
            action: delete
          - key: telemetry.sdk.language
            action: delete
    extensions:
      health_check:
        endpoint: 0.0.0.0:13133
    exporters:
      awsemf:
        namespace: 'OpenSearchMigrationsInfra'
        dimension_rollup_option: NoDimensionRollup
        resource_to_telemetry_conversion:
          enabled: true
        metric_declarations:
          - dimensions: [[namespace, pod, container]]
            metric_name_selectors:
              - container_cpu_usage_seconds_total
              - container_memory_working_set_bytes
          - dimensions: [[namespace, pod]]
            metric_name_selectors:
              - container_cpu_usage_seconds_total
              - container_memory_working_set_bytes
          - dimensions: [[namespace]]
            metric_name_selectors:
              - kube_deployment_status_replicas_available
      prometheus:
        endpoint: "0.0.0.0:8889"
        send_timestamps: true
        metric_expiration: 5m
        enable_open_metrics: true
    service:
      extensions: [health_check]
      pipelines:
        metrics:
          receivers: [otlp, prometheus]
          processors: [batch, k8sattributes, attributes, resource/remove_default_attributes, resource/metrics, cumulativetodelta]
          exporters: [awsemf, prometheus]

charts:
  fluent-bit:
    values:
      env:
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: aws-metadata
              key: AWS_REGION
        - name: STAGE_NAME
          valueFrom:
            configMapKeyRef:
              name: aws-metadata
              key: STAGE_NAME

      config:
        # Change output destination to be CloudWatch
        outputs: |
          [OUTPUT]
              Name                cloudwatch_logs
              Match               fluentbit-*
              region              ${AWS_REGION}
              log_group_name      /migration-assistant-${STAGE_NAME}-${AWS_REGION}/logs
              log_stream_prefix   from-
              auto_create_group   true

      # Remove logs PVC mount for EKS deployment
      extraVolumes:
        - name: lua-scripts
          configMap:
            name: fluentbit-lua-scripts

      extraVolumeMounts:
        - name: lua-scripts
          mountPath: /fluentbit/scripts
          readOnly: true